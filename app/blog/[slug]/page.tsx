import React from "react";

interface BlogContent {
  title: string;
  content: string;
}

const blogPosts: Record<string, BlogContent> = {
  "top-fields": {
    title: "კომპიუტერული მეცნიერების 5 წამყვანი მიმართულება",
    content:
      "კომპიუტერული მეცნიერება უზარმაზარი სფეროა, რომელიც მუდმივად ვითარდება და ყოველდღიურად ქმნის ახალ შესაძლებლობებს. თუ ფიქრობ კარიერაზე ტექნოლოგიებში ან უბრალოდ გაინტერესებს, საიდან დაიწყო, ქვემოთ ჩამოთვლილია კომპიუტერული მეცნიერების ის ხუთი მიმართულება, რომლებიც დღეს ყველაზე მოთხოვნადია და დიდი პოტენციალი აქვს მომავალშიც. 1. ვებ-დეველოპმენტი (Web Development) ვებ-დეველოპმენტი გულისხმობს ვებსაიტებისა და ვებ-აპლიკაციების შექმნას. იგი იყოფა ორ ნაწილად: ფრონტ-ენდ (მომხმარებლისთვის ხილული ნაწილი) და ბექ-ენდ (სერვერული ლოგიკა და მონაცემთა დამუშავება). თუ გინდა, შექმნა ისეთი პლატფორმები, როგორებიცაა Facebook, Amazon ან YouTube — ეს არის იდეალური დასაწყისი. რატომ ღირს სწავლა? დაბალი ბარიერი შესასვლელად ბევრი უფასო რესურსი მოთხოვნადი კარიერული გზა 2. ხელოვნური ინტელექტი და მანქანური სწავლება (AI & Machine Learning) AI და ML ტექნოლოგიები აძლევენ კომპიუტერებს შესაძლებლობას, ისწავლონ გამოცდილებიდან და მიიღონ გადაწყვეტილებები მონაცემების საფუძველზე. ეს სფერო დომინირებს ისეთი სერვისებით, როგორებიცაა რეკომენდაციების სისტემები (Netflix, Spotify), ხმოვანი ასისტენტები (Siri, Alexa) და თვითმართვადი მანქანები. რატომ ღირს სწავლა? მომავლის ტექნოლოგია ფართო გამოყენება სხვადასხვა ინდუსტრიაში მაღალი ხელფასები 3. კიბერუსაფრთხოება (Cybersecurity) ინფორმაციული უსაფრთხოება მიზნად ისახავს სისტემების, ქსელების და მონაცემების დაცვას კიბერ შეტევებისგან. დღევანდელ ციფრულ ეპოქაში კიბერუსაფრთხოება გახდა ერთ-ერთი ყველაზე მნიშვნელოვანი სფერო, რადგან ჰაკერული თავდასხმები ყოველდღიურად იზრდება. რატომ ღირს სწავლა? გლობალური მოთხოვნა პროფესიონალებზე სამუშაო უზრუნველყოფის მაღალი დონე მუდმივი სიახლეებისა და გამოწვევების წყარო 4. მონაცემთა მეცნიერება (Data Science) Data Science აერთიანებს სტატისტიკას, პროგრამირებას და დომენურ ცოდნას იმისთვის, რომ მონაცემებიდან მივიღოთ ღირებული ინფორმაცია. კომპანიები იყენებენ მონაცემთა მეცნიერებას ბიზნეს გადაწყვეტილებების გასაუმჯობესებლად, მომხმარებლის ქცევის ანალიზისთვის და ოპტიმიზაციისთვის. რატომ ღირს სწავლა? მოთხოვნა ყველა ინდუსტრიაში — ფინანსებში, მარკეტინგში, ჯანდაცვაში და სხვ. საინტერესო და პრაქტიკული ამოცანები მაღალი ანაზღაურება 5. მობილური აპლიკაციების განვითარება (Mobile App Development) მობილური ტექნოლოგიები ჩვენი ყოველდღიური ცხოვრების განუყოფელი ნაწილი გახდა. მობილური დეველოპერები ქმნიან აპლიკაციებს iOS-სა და Android-ისთვის — სოციალური მედიის აპებიდან დაწყებული, ფინანსური ინსტრუმენტებით დამთავრებული. რატომ ღირს სწავლა? მუდმივად მზარდი ბაზარი შესაძლებლობა, შექმნა შენი აპლიკაცია შემოსავლის პოტენციალი დამოუკიდებლადაც კი.",
  },
  "ai-future": {
    title: "როგორ აყალიბებს ხელოვნური ინტელექტი მომავალს",
    content:
      "ხელოვნური ინტელექტი (AI) ერთ-ერთი ყველაზე სწრაფად მზარდი ტექნოლოგიაა თანამედროვე სამყაროში. ის უკვე აღარ არის მხოლოდ სამეცნიერო ფანტასტიკის ნაწილი — AI რეალურია და დღითიდღე აყალიბებს ჩვენს ცხოვრებას, სამუშაო პროცესებსა და მომავალს. AI ყოველდღიურ ცხოვრებაში შენ შეიძლება ვერც კი აცნობიერებ, მაგრამ AI უკვე იყენებ ყოველდღიურად. როდესაც უყურებ რეკომენდებულ ვიდეოს YouTube-ზე, იღებ პერსონალიზებულ რეკლამებს ან სთხოვ Google-ს „რა ამინდია თბილისში“ — ეს ყველაფერი AI-ის დამსახურებაა. AI იძლევა შესაძლებლობას ტექნიკას დააპროეცსიროს მონაცემები, გაიგოს მომხმარებლის ქცევა და შეასრულოს მოქმედებები დიდი სიზუსტითა და სისწრაფით. AI ბიზნესში და ინდუსტრიებში AI ძირეულად ცვლის მრავალი ინდუსტრიის მუშაობის პრინციპებს: ჯანდაცვა: AI ეხმარება ექიმებს დიაგნოზის დასმაში, სამედიცინო გამოსახულების ანალიზში და მკურნალობის დაგეგმვაში. ფინანსები: ბანკები და საფინანსო კომპანიები იყენებენ AI-ს თაღლითობის გამოვლენისთვის და საინვესტიციო ანალიზისთვის. მზიდავი ინდუსტრიები: თვითმართვადი მანქანები, დრომები და მობილური რობოტები—all რეალობაა, რომელიც AI-ის წყალობით განვითარდა. მომსახურება: ჩათბოტები და ვირტუალური ასისტენტები აუმჯობესებენ მომხმარებელთა მხარდაჭერას 24/7 რეჟიმში. როგორ ცვლის AI სამუშაო ბაზარს AI ავტომატიზაციას უწევს რუტინულ ამოცანებს, რაც ნიშნავს, რომ ზოგიერთი პროფესია შესაძლოა გაქრეს, თუმცა ამის პარალელურად იქმნება უამრავი ახალი სამუშაო ადგილი: AI სპეციალისტები მონაცემთა ანალიტიკოსები ეტიკური ტექნოლოგიის მრჩევლები AI-თან დაკავშირებული ინფრასტრუქტურის ინჟინრები მნიშვნელოვანია, რომ მომავალი თაობა მოემზადოს ამ ცვლილებებისთვის და დაეუფლოს ისეთ უნარებს, როგორებიცაა კრიტიკული აზროვნება, პროგრამირება და მონაცემთა ანალიზი. გამოწვევები და პასუხისმგებლობა AI-სთან დაკავშირებული შესაძლებლობების გარდა, არსებობს სერიოზული გამოწვევებიც: ეთიკა: როგორ ვაკონტროლოთ, რომ AI სამართლიანად და უპრობლემოდ იმოქმედოს? კონფიდენციალურობა: როგორ დავიცვათ მომხმარებელთა მონაცემები? დასაქმება: როგორ შევამსუბუქოთ ზეგავლენა მათზე, ვინც შესაძლოა დაკარგოს სამუშაო? ამიტომ, განვითარებასთან ერთად უნდა დავნერგოთ შესაბამისი რეგულაციები და ეთიკური ჩარჩოები, რათა AI იყოს უსაფრთხო და სასარგებლო ყველასთვის.",
  },
  "cybersecurity-basics": {
    title:
      "კიბერუსაფრთხოების საფუძვლები, რომელიც ყველა დეველოპერმა უნდა იცოდეს",
    content:
      "დღევანდელ ციფრულ სამყაროში უსაფრთხოება აღარ არის მხოლოდ უსაფრთხოების ინჟინრების საქმე. თითოეული დეველოპერი პასუხისმგებელია იმაზე, რომ მის მიერ დაწერილი კოდი იყოს დაცული და არ გახდეს კიბერთავდასხმების სამიზნე. უსაფრთხოების უგულებელყოფა შეიძლება გამოიწვიოს მონაცემთა გაჟონვა, ფინანსური ზარალი და კომპანიის რეპუტაციის სერიოზული დარტყმა. ამ ბლოგში განვიხილავთ იმ ძირითად საკითხებს, რომლებიც თითოეულ დეველოპერს უნდა იცოდეს კიბერუსაფრთხოების შესახებ. 1. შეყვანის ვალიდაცია (Input Validation) ერთ-ერთი ყველაზე გავრცელებული კიბერთავდასხმის გზა მომხმარებლის შეყვანის მეშვეობით ხდება. თუ სწორად არ ვამოწმებთ მომხმარებლის მიერ შეყვანილ ინფორმაციას, სისტემა შესაძლოა გახდეს SQL ინექციის, XSS-ის (Cross-site Scripting) ან სხვა შეტევების მსხვერპლი. რჩევა: ყოველთვის გამოიყენე whitelist ვალიდაცია და შეამოწმე მონაცემები როგორც ფრონტ-ენდზე, ასევე ბექ-ენდზე. 2. პაროლების უსაფრთხოება არასოდეს შეინახო პაროლები უბრალო ტექსტის სახით. გამოიყენე ძლიერი ჰეშირების ალგორითმები (მაგ: bcrypt) და დაამატე salt, რათა თავიდან აიცილო rainbow table შეტევები. რჩევა: მომხმარებლის პაროლი უნდა იყოს დაშიფრული და არასოდეს ხელმისაწვდომი ბეჭდურად ან ლოგებში. 3. ავტორიზაცია vs. ავთენტიფიკაცია ავთენტიფიკაცია ნიშნავს იდენტობის დადასტურებას (ვინ ხარ?). ავტორიზაცია ნიშნავს უფლებების გადამოწმებას (რისი უფლება გაქვს?). ბევრ დეველოპერს ერევა ეს ორი ცნება — არასწორი ავტორიზაცია ხშირად იწვევს იმაზე მეტ წვდომას, ვიდრე მომხმარებელს რეალურად ეკუთვნის. რჩევა: გამოიყენე როლებზე დაფუძნებული წვდომის კონტროლი (RBAC). 4. HTTPS ყველგან ინფორმაციის გადაცემისას უნდა გამოიყენო დაშიფრული კავშირი. HTTPS იცავს მომხმარებელთან მიმოსვლას მესამე მხარის ჩარევისგან. რჩევა: არასოდეს დაშვება ფორმების გადაცემა ჩვეულებრივი HTTP-ით, განსაკუთრებით როცა იყენებ პაროლებს ან პერსონალურ მონაცემებს. 5. მონაცემთა გაჟონვის თავიდან აცილება არასოდეს შეინახო მგრძნობიარე მონაცემები იქ, სადაც მომხმარებელს მარტივად მიუწვდება ხელი — მაგალითად, ლოკალურ საცავში ბრაუზერში (localStorage) — განსაკუთრებით access token-ები. რჩევა: გამოიყენე HttpOnly cookies უსაფრთხო კავშირის პირობებში. 6. დამოკიდებულებების უსაფრთხოება მესამე მხარის ბიბლიოთეკების გამოყენება ჩვეულებრივია, მაგრამ მათი უსაფრთხოება უნდა შეამოწმო. მოძველებული ან დაუცველი ბიბლიოთეკები ხშირად არიან თავდასხმების წყარო. რჩევა: რეგულარულად განაახლე დამოკიდებულებები და გამოიყენე უსაფრთხოების სკანერები (მაგ. npm audit, OWASP Dependency Check). 7. შესავლის კონტროლი და ლოგირება სწორად დალოგილი ინფორმაცია უსაფრთხოების მოვლენებზე დაგეხმარება სწრაფ რეაგირებაში. თუმცა, უნდა გაითვალისწინო კონფიდენციალურობა — არ დალოგო პაროლები ან მგრძნობიარე მონაცემები.",
  },
};

export default async function BlogPage({
  params,
}: {
  params: Promise<{ slug: string }>;
}) {
  const { slug } = await params;
  const post = blogPosts[slug];

  if (!post) return <div>Article not found.</div>;

  return (
    <div className="max-w-3xl mx-auto px-4 py-12">
      <h1 className="text-4xl font-bold mb-6">{post.title}</h1>
      <p className="text-gray-700 leading-7">{post.content}</p>
    </div>
  );
}
